#set ($WikiManager = $services.wikimanager)
#set ($Exception = $WikiManager.DefaultException)
##
#set ($action = $request.getParameter("action"))
#set ($domain = $request.getParameter("domain"))
##
#############################################################################
##
#if ($doc.fullName == "XWiki.XWikiServerClassSheet" || $doc.fullName == "XWiki.XWikiServerClassTemplate")
  1 Document "$doc.name"
#else
  #set ($wiki = $WikiManager.getWikiFromDocumentName($doc.fullName))
  ##
  #if ($action && ($action == "create") && $domain && ($domain.trim().length() > 0))
    #if (!${services.csrf.isTokenValid("$!{request.getParameter('form_token')}")})
      #error($msg.get("notallowed"))
    #elseif (!$wiki.containsWikiAlias($domain))
      #set ($alias = $wiki.newObject("XWiki.XWikiServerClass"))
      $alias.set("server", $domain)
      $alias.set("homepage", "Main.WebHome")
      $wiki.save()
    #else
      #error($msg.get("wikimanager.erroraliasalreadynotexists", [$domain]))
    #end
  #end
  ##
  #if ($action && ($action == "delete") && $domain && ($domain.trim().length() > 0))
    #if (!${services.csrf.isTokenValid("$!{request.getParameter('form_token')}")})
      #error($msg.get("notallowed"))
    #elseif ($wiki.containsWikiAlias($domain))
      #set ($alias = $wiki.getWikiAlias($domain))
      #set ($removed = $wiki.removeObject($alias.objectApi))
      $wiki.save()
    #else
      #error($msg.get("wikimanager.erroraliasdoesnotexists", [$domain]))
    #end
  #end
  ##
  #############################################################################
  ##
  #set ($wikiAliasList = $wiki.wikiAliasList)
  ##
  #if ($wikiAliasList.size() > 0)
    1 Wiki "$wiki.wikiName"
    ##
    #set ($firstalias = $wikiAliasList.get(0))
    #if ($xcontext.action == "view")
      1.1 $msg.get("wikimanager.title.wikisettings")
    #else
      <fieldset>
        <legend>$msg.get("wikimanager.title.wikisettings")</legend>
    #end
    ##
      <dl>
        <dt>$msg.get("wikimanager.prop.wiki.wikiprettyname"):</dt>
          <dd>
            <p>
              $doc.display("wikiprettyname", $firstalias.objectApi)\\
              $msg.get("wikimanager.doc.createwiki.desc.wikiprettyname")
            </p>
          </dd>
        <dt>$msg.get("wikimanager.prop.wiki.owner"):</dt>
          <dd>
            $doc.display("owner", $firstalias.objectApi)
            <p>
              $msg.get("wikimanager.doc.createwiki.desc.owner")
            </p>
          </dd>
        <dt>$msg.get("wikimanager.prop.wiki.secure"):</dt>
          <dd>
            <p>
              $doc.display("secure", $firstalias.objectApi)\\
              $msg.get("wikimanager.doc.createwiki.desc.secure")
            </p>
          </dd>
        <dt>$msg.get("wikimanager.prop.wiki.iswikitemplate"):</dt>
          <dd>
            <p>
              $doc.display("iswikitemplate", $firstalias.objectApi)\\
              $msg.get("wikimanager.doc.createwiki.desc.iswikitemplate")
            </p>
          </dd>
        <dt>$msg.get("wikimanager.prop.wiki.server"):</dt>
          <dd>
            <p>
              $doc.display("server", $firstalias.objectApi)\\
              $msg.get("wikimanager.doc.createwiki.desc.server")
            </p>
          </dd>
        <dt>$msg.get("wikimanager.prop.wiki.description"):</dt>
          <dd>
            <p>
              $doc.display("description", $firstalias.objectApi)\\
              $msg.get("wikimanager.doc.createwiki.desc.description")
            </p>
          </dd>
        <dt>$msg.get("wikimanager.prop.wiki.homepage"):</dt>
          <dd>
            <p>
              $doc.display("homepage", $firstalias.objectApi)\\
              $msg.get("wikimanager.doc.createwiki.desc.homepage")
            </p>
          </dd>
      </dl>
    #if ($xcontext.action != "view")
      </fieldset>
    #end
    ##
    #if ($xcontext.action == "view")
      1.1 $msg.get("wikimanager.title.createnewalias")
      ##
      <form method="get" action="">
        <fieldset>
          <legend>Create new alias</legend>
          <input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" />
          <input type="hidden" name="action" value="create"/>
          <label for="inputdomain">$msg.get("wikimanager.prop.alias.server")</label>: <input id="inputdomain" type="text" name="domain" class="wikialiasinput"/>
          <input type="submit" class="button" value="$msg.get("create")"/>
          </fieldset>
      </form>
    #end
    ##
    #if ($wikiAliasList.size() > 1)
      #if ($xcontext.action == "view")
        1.1 $msg.get("wikimanager.title.viewaliases")
      #end
      ##
      #foreach($wikiAlias in $wikiAliasList.subList(1, $wikiAliasList.size()))
        #if ($xcontext.action == "view")
          <form method="get" action="$doc.getURL("view")">
        #end
            <fieldset>
              <legend>$doc.display("server", $wikiAlias.objectApi)</legend>
              ##
	          <br />
              <dl>
                <dt>$msg.get("wikimanager.prop.alias.description"):</dt>
                  <dd>
                    <p>
                      $doc.display("description", $wikiAlias.objectApi)\\
                      $msg.get("wikimanager.doc.createwiki.desc.description")
                    </p>
                  </dd>
                <dt>$msg.get("wikimanager.prop.alias.homepage"):</dt>
                  <dd>
                    <p>
                      $doc.display("homepage", $wikiAlias.objectApi)\\
                      $msg.get("wikimanager.doc.createwiki.desc.homepage")
                    </p>
                  </dd>
              </dl>
        #if ($xcontext.action == "view")
  	          <br />
              <input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" />
              <input type="hidden" name="action" value="delete"/>
              <input type="hidden" name="domain" value="$wikiAlias.server"/>
              <input type="submit" class="button" value="$msg.get("delete")"/>
        #end
            </fieldset>
        #if ($xcontext.action == "view")
          </form>
        #end
      #end
    #end
  #end
#end